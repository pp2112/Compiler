package antlr;

// Generated from ./Wacc.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, IMPORT=2, PLUS=3, MINUS=4, BEGIN=5, END=6, OPEN_PARENTHESES=7, 
		CLOSE_PARENTHESES=8, OPEN_BRACKETS=9, CLOSE_BRACKETS=10, COMMA=11, IS=12, 
		SKIP=13, EQUALS=14, READ=15, RETURN=16, EXIT=17, PRINT=18, PRINTLN=19, 
		FREE=20, IF=21, THEN=22, ELSE=23, FI=24, QUEST=25, COLON=26, WHILE=27, 
		DO=28, DONE=29, DWHILE=30, DDO=31, DDONE=32, FOR=33, FDO=34, FDONE=35, 
		SEMICOLON=36, NEWPAIR=37, CALL=38, FST=39, SND=40, INT=41, BOOL=42, CHAR=43, 
		STRING=44, PAIR=45, EXCLAMATION=46, LEN=47, ORD=48, TOINT=49, STAR=50, 
		DIVIDE=51, MOD=52, GREATER_THAN=53, GREATER_THAN_EQUAL=54, LESS_THAN=55, 
		LESS_THAN_EQUAL=56, EQUAL=57, NOT_EQUAL=58, AND=59, OR=60, INTEGER_LIT=61, 
		TRUE=62, FALSE=63, SINGLE_QUOTE=64, DOUBLE_QUOTE=65, CHAR_LITERAL=66, 
		STRING_LITERAL=67, NULL=68, HASH=69, IDENT=70, WS=71;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"COMMENT", "'import '", "'+'", "'-'", "'begin'", "'end'", "'('", "')'", 
		"'['", "']'", "','", "'is'", "'skip'", "'='", "'read'", "'return'", "'exit'", 
		"'print'", "'println'", "'free'", "'if'", "'then'", "'else'", "'fi'", 
		"'?'", "':'", "'while'", "'do'", "'done'", "'dwhile'", "'ddo'", "'ddone'", 
		"'for'", "'fdo'", "'fdone'", "';'", "'newpair'", "'call'", "'fst'", "'snd'", 
		"'int'", "'bool'", "'char'", "'string'", "'pair'", "'!'", "'len'", "'ord'", 
		"'toInt'", "'*'", "'/'", "'%'", "'>'", "'>='", "'<'", "'<='", "'=='", 
		"'!='", "'&&'", "'||'", "INTEGER_LIT", "'true'", "'false'", "'''", "'\"'", 
		"CHAR_LITERAL", "STRING_LITERAL", "'null'", "'#'", "IDENT", "WS"
	};
	public static final String[] ruleNames = {
		"COMMENT", "IMPORT", "PLUS", "MINUS", "BEGIN", "END", "OPEN_PARENTHESES", 
		"CLOSE_PARENTHESES", "OPEN_BRACKETS", "CLOSE_BRACKETS", "COMMA", "IS", 
		"SKIP", "EQUALS", "READ", "RETURN", "EXIT", "PRINT", "PRINTLN", "FREE", 
		"IF", "THEN", "ELSE", "FI", "QUEST", "COLON", "WHILE", "DO", "DONE", "DWHILE", 
		"DDO", "DDONE", "FOR", "FDO", "FDONE", "SEMICOLON", "NEWPAIR", "CALL", 
		"FST", "SND", "INT", "BOOL", "CHAR", "STRING", "PAIR", "EXCLAMATION", 
		"LEN", "ORD", "TOINT", "STAR", "DIVIDE", "MOD", "GREATER_THAN", "GREATER_THAN_EQUAL", 
		"LESS_THAN", "LESS_THAN_EQUAL", "EQUAL", "NOT_EQUAL", "AND", "OR", "UNDERSCORE", 
		"DIGIT", "INTEGER_LIT", "TRUE", "FALSE", "SINGLE_QUOTE", "DOUBLE_QUOTE", 
		"ESCAPED_BACKSLASH", "END_OF_STRING", "B", "T", "N", "F", "R", "ESCAPE_CHARACTER", 
		"CHAR_INPUT", "CHAR_LITERAL", "STRING_LITERAL", "NULL", "HASH", "SMALL_ALPHA", 
		"LARGE_ALPHA", "IDENT", "WS"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Wacc.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 0: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 83: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2I\u020a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\3\2\3\2\7\2\u00ae\n\2\f\2\16\2\u00b1\13\2\3\2\3\2\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7"+
		"\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31"+
		"\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3"+
		" \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3$\3"+
		"$\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)"+
		"\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-"+
		"\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\3\67\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3?\3?\3"+
		"@\6@\u01a8\n@\r@\16@\u01a9\3A\3A\3A\3A\3A\3B\3B\3B\3B\3B\3B\3C\3C\3D\3"+
		"D\3E\3E\3E\3F\3F\3F\3G\3G\3G\3H\3H\3H\3I\3I\3I\3J\3J\3J\3K\3K\3K\3L\3"+
		"L\3L\3L\3L\3L\3L\3L\3L\3L\3L\5L\u01db\nL\3M\3M\5M\u01df\nM\3N\3N\3N\3"+
		"N\3O\3O\7O\u01e7\nO\fO\16O\u01ea\13O\3O\3O\3P\3P\3P\3P\3P\3Q\3Q\3R\3R"+
		"\3S\3S\3T\3T\3T\5T\u01fc\nT\3T\3T\3T\3T\7T\u0202\nT\fT\16T\u0205\13T\3"+
		"U\3U\3U\3U\2V\3\3\2\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13"+
		"\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25"+
		"\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1"+
		"= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60"+
		"\1_\61\1a\62\1c\63\1e\64\1g\65\1i\66\1k\67\1m8\1o9\1q:\1s;\1u<\1w=\1y"+
		">\1{\2\1}\2\1\177?\1\u0081@\1\u0083A\1\u0085B\1\u0087C\1\u0089\2\1\u008b"+
		"\2\1\u008d\2\1\u008f\2\1\u0091\2\1\u0093\2\1\u0095\2\1\u0097\2\1\u0099"+
		"\2\1\u009bD\1\u009dE\1\u009fF\1\u00a1G\1\u00a3\2\1\u00a5\2\1\u00a7H\1"+
		"\u00a9I\3\3\2\5\4\2\f\f\17\17\5\2$$))^^\5\2\13\f\17\17\"\"\u020e\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o"+
		"\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2\177"+
		"\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2"+
		"\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a7"+
		"\3\2\2\2\2\u00a9\3\2\2\2\3\u00ab\3\2\2\2\5\u00b6\3\2\2\2\7\u00be\3\2\2"+
		"\2\t\u00c0\3\2\2\2\13\u00c2\3\2\2\2\r\u00c8\3\2\2\2\17\u00cc\3\2\2\2\21"+
		"\u00ce\3\2\2\2\23\u00d0\3\2\2\2\25\u00d2\3\2\2\2\27\u00d4\3\2\2\2\31\u00d6"+
		"\3\2\2\2\33\u00d9\3\2\2\2\35\u00de\3\2\2\2\37\u00e0\3\2\2\2!\u00e5\3\2"+
		"\2\2#\u00ec\3\2\2\2%\u00f1\3\2\2\2\'\u00f7\3\2\2\2)\u00ff\3\2\2\2+\u0104"+
		"\3\2\2\2-\u0107\3\2\2\2/\u010c\3\2\2\2\61\u0111\3\2\2\2\63\u0114\3\2\2"+
		"\2\65\u0116\3\2\2\2\67\u0118\3\2\2\29\u011e\3\2\2\2;\u0121\3\2\2\2=\u0126"+
		"\3\2\2\2?\u012d\3\2\2\2A\u0131\3\2\2\2C\u0137\3\2\2\2E\u013b\3\2\2\2G"+
		"\u013f\3\2\2\2I\u0145\3\2\2\2K\u0147\3\2\2\2M\u014f\3\2\2\2O\u0154\3\2"+
		"\2\2Q\u0158\3\2\2\2S\u015c\3\2\2\2U\u0160\3\2\2\2W\u0165\3\2\2\2Y\u016a"+
		"\3\2\2\2[\u0171\3\2\2\2]\u0176\3\2\2\2_\u0178\3\2\2\2a\u017c\3\2\2\2c"+
		"\u0180\3\2\2\2e\u0186\3\2\2\2g\u0188\3\2\2\2i\u018a\3\2\2\2k\u018c\3\2"+
		"\2\2m\u018e\3\2\2\2o\u0191\3\2\2\2q\u0193\3\2\2\2s\u0196\3\2\2\2u\u0199"+
		"\3\2\2\2w\u019c\3\2\2\2y\u019f\3\2\2\2{\u01a2\3\2\2\2}\u01a4\3\2\2\2\177"+
		"\u01a7\3\2\2\2\u0081\u01ab\3\2\2\2\u0083\u01b0\3\2\2\2\u0085\u01b6\3\2"+
		"\2\2\u0087\u01b8\3\2\2\2\u0089\u01ba\3\2\2\2\u008b\u01bd\3\2\2\2\u008d"+
		"\u01c0\3\2\2\2\u008f\u01c3\3\2\2\2\u0091\u01c6\3\2\2\2\u0093\u01c9\3\2"+
		"\2\2\u0095\u01cc\3\2\2\2\u0097\u01da\3\2\2\2\u0099\u01de\3\2\2\2\u009b"+
		"\u01e0\3\2\2\2\u009d\u01e4\3\2\2\2\u009f\u01ed\3\2\2\2\u00a1\u01f2\3\2"+
		"\2\2\u00a3\u01f4\3\2\2\2\u00a5\u01f6\3\2\2\2\u00a7\u01fb\3\2\2\2\u00a9"+
		"\u0206\3\2\2\2\u00ab\u00af\7%\2\2\u00ac\u00ae\n\2\2\2\u00ad\u00ac\3\2"+
		"\2\2\u00ae\u00b1\3\2\2\2\u00af\u00ad\3\2\2\2\u00af\u00b0\3\2\2\2\u00b0"+
		"\u00b2\3\2\2\2\u00b1\u00af\3\2\2\2\u00b2\u00b3\t\2\2\2\u00b3\u00b4\3\2"+
		"\2\2\u00b4\u00b5\b\2\2\2\u00b5\4\3\2\2\2\u00b6\u00b7\7k\2\2\u00b7\u00b8"+
		"\7o\2\2\u00b8\u00b9\7r\2\2\u00b9\u00ba\7q\2\2\u00ba\u00bb\7t\2\2\u00bb"+
		"\u00bc\7v\2\2\u00bc\u00bd\7\"\2\2\u00bd\6\3\2\2\2\u00be\u00bf\7-\2\2\u00bf"+
		"\b\3\2\2\2\u00c0\u00c1\7/\2\2\u00c1\n\3\2\2\2\u00c2\u00c3\7d\2\2\u00c3"+
		"\u00c4\7g\2\2\u00c4\u00c5\7i\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7p\2\2"+
		"\u00c7\f\3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb\7f"+
		"\2\2\u00cb\16\3\2\2\2\u00cc\u00cd\7*\2\2\u00cd\20\3\2\2\2\u00ce\u00cf"+
		"\7+\2\2\u00cf\22\3\2\2\2\u00d0\u00d1\7]\2\2\u00d1\24\3\2\2\2\u00d2\u00d3"+
		"\7_\2\2\u00d3\26\3\2\2\2\u00d4\u00d5\7.\2\2\u00d5\30\3\2\2\2\u00d6\u00d7"+
		"\7k\2\2\u00d7\u00d8\7u\2\2\u00d8\32\3\2\2\2\u00d9\u00da\7u\2\2\u00da\u00db"+
		"\7m\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7r\2\2\u00dd\34\3\2\2\2\u00de\u00df"+
		"\7?\2\2\u00df\36\3\2\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3"+
		"\7c\2\2\u00e3\u00e4\7f\2\2\u00e4 \3\2\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7"+
		"\7g\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7w\2\2\u00e9\u00ea\7t\2\2\u00ea"+
		"\u00eb\7p\2\2\u00eb\"\3\2\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7z\2\2\u00ee"+
		"\u00ef\7k\2\2\u00ef\u00f0\7v\2\2\u00f0$\3\2\2\2\u00f1\u00f2\7r\2\2\u00f2"+
		"\u00f3\7t\2\2\u00f3\u00f4\7k\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7v\2\2"+
		"\u00f6&\3\2\2\2\u00f7\u00f8\7r\2\2\u00f8\u00f9\7t\2\2\u00f9\u00fa\7k\2"+
		"\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe"+
		"\7p\2\2\u00fe(\3\2\2\2\u00ff\u0100\7h\2\2\u0100\u0101\7t\2\2\u0101\u0102"+
		"\7g\2\2\u0102\u0103\7g\2\2\u0103*\3\2\2\2\u0104\u0105\7k\2\2\u0105\u0106"+
		"\7h\2\2\u0106,\3\2\2\2\u0107\u0108\7v\2\2\u0108\u0109\7j\2\2\u0109\u010a"+
		"\7g\2\2\u010a\u010b\7p\2\2\u010b.\3\2\2\2\u010c\u010d\7g\2\2\u010d\u010e"+
		"\7n\2\2\u010e\u010f\7u\2\2\u010f\u0110\7g\2\2\u0110\60\3\2\2\2\u0111\u0112"+
		"\7h\2\2\u0112\u0113\7k\2\2\u0113\62\3\2\2\2\u0114\u0115\7A\2\2\u0115\64"+
		"\3\2\2\2\u0116\u0117\7<\2\2\u0117\66\3\2\2\2\u0118\u0119\7y\2\2\u0119"+
		"\u011a\7j\2\2\u011a\u011b\7k\2\2\u011b\u011c\7n\2\2\u011c\u011d\7g\2\2"+
		"\u011d8\3\2\2\2\u011e\u011f\7f\2\2\u011f\u0120\7q\2\2\u0120:\3\2\2\2\u0121"+
		"\u0122\7f\2\2\u0122\u0123\7q\2\2\u0123\u0124\7p\2\2\u0124\u0125\7g\2\2"+
		"\u0125<\3\2\2\2\u0126\u0127\7f\2\2\u0127\u0128\7y\2\2\u0128\u0129\7j\2"+
		"\2\u0129\u012a\7k\2\2\u012a\u012b\7n\2\2\u012b\u012c\7g\2\2\u012c>\3\2"+
		"\2\2\u012d\u012e\7f\2\2\u012e\u012f\7f\2\2\u012f\u0130\7q\2\2\u0130@\3"+
		"\2\2\2\u0131\u0132\7f\2\2\u0132\u0133\7f\2\2\u0133\u0134\7q\2\2\u0134"+
		"\u0135\7p\2\2\u0135\u0136\7g\2\2\u0136B\3\2\2\2\u0137\u0138\7h\2\2\u0138"+
		"\u0139\7q\2\2\u0139\u013a\7t\2\2\u013aD\3\2\2\2\u013b\u013c\7h\2\2\u013c"+
		"\u013d\7f\2\2\u013d\u013e\7q\2\2\u013eF\3\2\2\2\u013f\u0140\7h\2\2\u0140"+
		"\u0141\7f\2\2\u0141\u0142\7q\2\2\u0142\u0143\7p\2\2\u0143\u0144\7g\2\2"+
		"\u0144H\3\2\2\2\u0145\u0146\7=\2\2\u0146J\3\2\2\2\u0147\u0148\7p\2\2\u0148"+
		"\u0149\7g\2\2\u0149\u014a\7y\2\2\u014a\u014b\7r\2\2\u014b\u014c\7c\2\2"+
		"\u014c\u014d\7k\2\2\u014d\u014e\7t\2\2\u014eL\3\2\2\2\u014f\u0150\7e\2"+
		"\2\u0150\u0151\7c\2\2\u0151\u0152\7n\2\2\u0152\u0153\7n\2\2\u0153N\3\2"+
		"\2\2\u0154\u0155\7h\2\2\u0155\u0156\7u\2\2\u0156\u0157\7v\2\2\u0157P\3"+
		"\2\2\2\u0158\u0159\7u\2\2\u0159\u015a\7p\2\2\u015a\u015b\7f\2\2\u015b"+
		"R\3\2\2\2\u015c\u015d\7k\2\2\u015d\u015e\7p\2\2\u015e\u015f\7v\2\2\u015f"+
		"T\3\2\2\2\u0160\u0161\7d\2\2\u0161\u0162\7q\2\2\u0162\u0163\7q\2\2\u0163"+
		"\u0164\7n\2\2\u0164V\3\2\2\2\u0165\u0166\7e\2\2\u0166\u0167\7j\2\2\u0167"+
		"\u0168\7c\2\2\u0168\u0169\7t\2\2\u0169X\3\2\2\2\u016a\u016b\7u\2\2\u016b"+
		"\u016c\7v\2\2\u016c\u016d\7t\2\2\u016d\u016e\7k\2\2\u016e\u016f\7p\2\2"+
		"\u016f\u0170\7i\2\2\u0170Z\3\2\2\2\u0171\u0172\7r\2\2\u0172\u0173\7c\2"+
		"\2\u0173\u0174\7k\2\2\u0174\u0175\7t\2\2\u0175\\\3\2\2\2\u0176\u0177\7"+
		"#\2\2\u0177^\3\2\2\2\u0178\u0179\7n\2\2\u0179\u017a\7g\2\2\u017a\u017b"+
		"\7p\2\2\u017b`\3\2\2\2\u017c\u017d\7q\2\2\u017d\u017e\7t\2\2\u017e\u017f"+
		"\7f\2\2\u017fb\3\2\2\2\u0180\u0181\7v\2\2\u0181\u0182\7q\2\2\u0182\u0183"+
		"\7K\2\2\u0183\u0184\7p\2\2\u0184\u0185\7v\2\2\u0185d\3\2\2\2\u0186\u0187"+
		"\7,\2\2\u0187f\3\2\2\2\u0188\u0189\7\61\2\2\u0189h\3\2\2\2\u018a\u018b"+
		"\7\'\2\2\u018bj\3\2\2\2\u018c\u018d\7@\2\2\u018dl\3\2\2\2\u018e\u018f"+
		"\7@\2\2\u018f\u0190\7?\2\2\u0190n\3\2\2\2\u0191\u0192\7>\2\2\u0192p\3"+
		"\2\2\2\u0193\u0194\7>\2\2\u0194\u0195\7?\2\2\u0195r\3\2\2\2\u0196\u0197"+
		"\7?\2\2\u0197\u0198\7?\2\2\u0198t\3\2\2\2\u0199\u019a\7#\2\2\u019a\u019b"+
		"\7?\2\2\u019bv\3\2\2\2\u019c\u019d\7(\2\2\u019d\u019e\7(\2\2\u019ex\3"+
		"\2\2\2\u019f\u01a0\7~\2\2\u01a0\u01a1\7~\2\2\u01a1z\3\2\2\2\u01a2\u01a3"+
		"\7a\2\2\u01a3|\3\2\2\2\u01a4\u01a5\4\62;\2\u01a5~\3\2\2\2\u01a6\u01a8"+
		"\5}?\2\u01a7\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9"+
		"\u01aa\3\2\2\2\u01aa\u0080\3\2\2\2\u01ab\u01ac\7v\2\2\u01ac\u01ad\7t\2"+
		"\2\u01ad\u01ae\7w\2\2\u01ae\u01af\7g\2\2\u01af\u0082\3\2\2\2\u01b0\u01b1"+
		"\7h\2\2\u01b1\u01b2\7c\2\2\u01b2\u01b3\7n\2\2\u01b3\u01b4\7u\2\2\u01b4"+
		"\u01b5\7g\2\2\u01b5\u0084\3\2\2\2\u01b6\u01b7\7)\2\2\u01b7\u0086\3\2\2"+
		"\2\u01b8\u01b9\7$\2\2\u01b9\u0088\3\2\2\2\u01ba\u01bb\7^\2\2\u01bb\u01bc"+
		"\7^\2\2\u01bc\u008a\3\2\2\2\u01bd\u01be\7^\2\2\u01be\u01bf\7\62\2\2\u01bf"+
		"\u008c\3\2\2\2\u01c0\u01c1\7^\2\2\u01c1\u01c2\7d\2\2\u01c2\u008e\3\2\2"+
		"\2\u01c3\u01c4\7^\2\2\u01c4\u01c5\7v\2\2\u01c5\u0090\3\2\2\2\u01c6\u01c7"+
		"\7^\2\2\u01c7\u01c8\7p\2\2\u01c8\u0092\3\2\2\2\u01c9\u01ca\7^\2\2\u01ca"+
		"\u01cb\7h\2\2\u01cb\u0094\3\2\2\2\u01cc\u01cd\7^\2\2\u01cd\u01ce\7t\2"+
		"\2\u01ce\u0096\3\2\2\2\u01cf\u01db\5\u008bF\2\u01d0\u01db\5\u008dG\2\u01d1"+
		"\u01db\5\u008fH\2\u01d2\u01db\5\u0091I\2\u01d3\u01db\5\u0093J\2\u01d4"+
		"\u01db\5\u0095K\2\u01d5\u01d6\7^\2\2\u01d6\u01db\5\u0085C\2\u01d7\u01d8"+
		"\7^\2\2\u01d8\u01db\5\u0087D\2\u01d9\u01db\5\u0089E\2\u01da\u01cf\3\2"+
		"\2\2\u01da\u01d0\3\2\2\2\u01da\u01d1\3\2\2\2\u01da\u01d2\3\2\2\2\u01da"+
		"\u01d3\3\2\2\2\u01da\u01d4\3\2\2\2\u01da\u01d5\3\2\2\2\u01da\u01d7\3\2"+
		"\2\2\u01da\u01d9\3\2\2\2\u01db\u0098\3\2\2\2\u01dc\u01df\n\3\2\2\u01dd"+
		"\u01df\5\u0097L\2\u01de\u01dc\3\2\2\2\u01de\u01dd\3\2\2\2\u01df\u009a"+
		"\3\2\2\2\u01e0\u01e1\5\u0085C\2\u01e1\u01e2\5\u0099M\2\u01e2\u01e3\5\u0085"+
		"C\2\u01e3\u009c\3\2\2\2\u01e4\u01e8\5\u0087D\2\u01e5\u01e7\5\u0099M\2"+
		"\u01e6\u01e5\3\2\2\2\u01e7\u01ea\3\2\2\2\u01e8\u01e6\3\2\2\2\u01e8\u01e9"+
		"\3\2\2\2\u01e9\u01eb\3\2\2\2\u01ea\u01e8\3\2\2\2\u01eb\u01ec\5\u0087D"+
		"\2\u01ec\u009e\3\2\2\2\u01ed\u01ee\7p\2\2\u01ee\u01ef\7w\2\2\u01ef\u01f0"+
		"\7n\2\2\u01f0\u01f1\7n\2\2\u01f1\u00a0\3\2\2\2\u01f2\u01f3\7%\2\2\u01f3"+
		"\u00a2\3\2\2\2\u01f4\u01f5\4c|\2\u01f5\u00a4\3\2\2\2\u01f6\u01f7\4C\\"+
		"\2\u01f7\u00a6\3\2\2\2\u01f8\u01fc\5{>\2\u01f9\u01fc\5\u00a3R\2\u01fa"+
		"\u01fc\5\u00a5S\2\u01fb\u01f8\3\2\2\2\u01fb\u01f9\3\2\2\2\u01fb\u01fa"+
		"\3\2\2\2\u01fc\u0203\3\2\2\2\u01fd\u0202\5{>\2\u01fe\u0202\5\u00a3R\2"+
		"\u01ff\u0202\5\u00a5S\2\u0200\u0202\5}?\2\u0201\u01fd\3\2\2\2\u0201\u01fe"+
		"\3\2\2\2\u0201\u01ff\3\2\2\2\u0201\u0200\3\2\2\2\u0202\u0205\3\2\2\2\u0203"+
		"\u0201\3\2\2\2\u0203\u0204\3\2\2\2\u0204\u00a8\3\2\2\2\u0205\u0203\3\2"+
		"\2\2\u0206\u0207\t\4\2\2\u0207\u0208\3\2\2\2\u0208\u0209\bU\3\2\u0209"+
		"\u00aa\3\2\2\2\13\2\u00af\u01a9\u01da\u01de\u01e8\u01fb\u0201\u0203";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}