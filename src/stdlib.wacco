int abs(int a) is
  int result = 1;
  if (a >= 0) then
    result = a
  else
    result = 0-a
  fi;
  return result
end

int pow(int a, int b) is
  int result = 1;
  if (b == 0) then
    result = 1
  else
    if (b < 0) then
      skip
    else
      while (b != 0) do
        result = result * a;
        b = b-1
      done
    fi
  fi;
  return result
end

int max(int a, int b) is
  int result = a;
  if (a > b) then
    skip
  else
    result = b
  fi;
  return result
end

int min(int a , int b) is
  int result = a;
  if (a < b) then
    skip
  else
    result = b
  fi; 
  return result
end

int fibonacci(int n) is
 if n <= 1
 then
 return n
 else
 skip
 fi ;
 int f1 = call fibonacci(n - 1) ;
 int f2 = call fibonacci(n - 2) ;
 return f1 + f2
 end

 int pause(int n) is
 int result = 0;
 for(int i=0; i<n; i++) fdo
  result = call fibonacci(35)
 fdone;
 return 0
 end
 
 
 int search(int elem, int[] array,int numElems) is
  int retVal = -1;
  for(int i = 0 ; i < numElems ; i++) fdo
   if(array[i] == elem) then
   return i
   else
    skip
   fi
  fdone;
  return retVal
 end

int[] bubblesort (int[] n) is
		int[] result = n;
		int temp = 0;
		for(int i = 0 ; i < len result  ; i ++) fdo
			for(int j =0 ; j < len result - 1 - i ; j++ ) fdo
				if (result[j] > result[j+1])
					then 
						temp = result[j];
						result[j] = result[j+1];
						result[j+1] = temp
					else
						skip
					fi
				fdone
			fdone;
			return result
	end  
